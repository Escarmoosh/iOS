//
// Competence.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public struct Competence: Codable {
    
    public init(from decoder: Decoder) throws {
        
        let values = try decoder.container(keyedBy: CodingKeys.self)
        
        _id = try values.decode(String.self, forKey: ._id)
        label = try values.decode(Label.self, forKey: .label)
        score = try values.decode(Double.self, forKey: .score)
        skills = try values.decode([Skill].self, forKey: .skills)
    }
    
    public func encode(to encoder: Encoder) throws {
        
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(_id, forKey: ._id)
        try container.encode(label, forKey: .label)
        
        try container.encode(score, forKey: .score)
        try container.encode(skills, forKey: .skills)
    }

    public enum Label: String, Codable { 
        case attaque = "Attaque"
        case defense = "Defense"
    }
    public var _id: String
    public var label: Label

    /** card score for this competence &#x3D; Sum(Skill.score)  */
    public var score: Double?

    public var skills: [Skill]
    public init(_id: String, label: Label, score: Double?, skills: [Skill]) {
        self._id = _id
        self.label = label
        self.score = score
        self.skills = skills
    }
    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case label
        case score
        case skills
    }

}
